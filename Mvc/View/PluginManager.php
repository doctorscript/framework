<?phpnamespace DoctorScript\Mvc\View;use DoctorScript\ServiceManager\ServiceManager;use DoctorScript\ServiceManager\Plugin\PluginManagerInterface;use DoctorScript\Mvc\View\Plugin\MarkerInterface;use DoctorScript\ServiceManager\ServiceLocatorInterface;class PluginManager extends ServiceManager implements PluginManagerInterface{    /**     * @var array    */    protected $services = [];        /**     * Service locator implementation instance     * @var $serviceLocator    */    private $serviceLocator;        /**     * Set service locator implementation     *     * @param ServiceLocatorInterface $serviceLocator     * @return void    */    public function setServiceLocator(ServiceLocatorInterface $serviceLocator)    {        $this->serviceLocator = $serviceLocator;    }        /**     * Get service locator implementation     *     * @return ServiceLocatorInterface    */    public function getServiceLocator()    {        return $this->serviceLocator;    }    /**     * Check plugin is valid     *     * @param  MarkerInterface $plugin     * @throws Exception\InvalidPluginException if plugin not instance of MarkerInterface    */    public function validatePlugin($plugin)    {        if (!$plugin instanceOf MarkerInterface) {            throw new Exception\InvalidPluginException(sprintf(                'View plugin %s must be instance Of DoctorScript\Mvc\View\Plugin\MarkerInterface',                is_object($plugin) ? get_class($plugin) : gettype($plugin)            ));        }    }}