<?phpnamespace DoctorScript\Mvc\View\Service;use DoctorScript\ServiceManager\ServiceFactoryInterface;use DoctorScript\ServiceManager\ServiceLocatorInterface;use DoctorScript\Mvc\View\ViewDecorator;use DoctorScript\Mvc\View\PluginManager;use DoctorScript\Mvc\View\Resolver\TemplateResolver;class ViewDecoratorFactory implements ServiceFactoryInterface{    /**     * Create view decorator and inject appropriate dependencies     *     * @param  ServiceLocatorInterface $serviceLocator     * @return ViewDecorator    */    public function createService(ServiceLocatorInterface $serviceLocator)    {        $pluginManager    = new PluginManager();        $templateResolver = new TemplateResolver();        $config = $serviceLocator->get('config');                $templateMap = isset($config['view_manager']['template_map']) ? $config['view_manager']['template_map'] : [];        $templateResolver->setTemplateMap($templateMap);                return new ViewDecorator($pluginManager, $templateResolver);    }}